Внимание!:

Проекта изисква качване на HTTP Server. Не се използват никакви ресурси на 
сървъра, но браузърите отказват да изпъляват проекта от URL започващо със 
"file://". Например приложението може да бъде поставено в document root на
Apache2 HTTP server.

Приложението използва HTML5 Canvas и HTML5 Web Workers. Тези екстри в момента 
са налични на браузърите Firefox и Google Chrome. Използването на други 
браузъри може да доведе до неработещ резултат.

Внимание: приложението стартира т.нар. Web Worker за да изпълнява тежки 
процесорни операции фоново. В случай, че това затруднява работата, моля 
използвайте бутона "Cancel" или не пускайте приложението. Тежките операции се 
изпълняват на вашият компютър, дори когато приложението е качено на външен 
сървър.

Приложението е достъпно и онлайн на адрес: http://dragiyski.org/colors

Начин на употреба:

1. Натиснете Ctrl+O или бутона "Select" горе в дясно.
2. Изберете картинка от вашия компютър:
* Само четимите като изображения файлове от браузъра могат да бъдат избрани,
това са: JPEG, PNG, GIF, BMP изображения.
* Ако картинката е четима, ще се появи на екрана.

3. Натиснете бутона "Run" горе в дясно. Ще се появи надпис "Loading..." и 
лентата ще започне да се запълва:
* До 50% лентата чете пикселикте на изображението за да открие еднакви цветове.
* След 50% започват няколко итерации на k-means алгоритъма.

4. В случай на липса на желание да изчакате или при проблеми с вашия компютър 
можете да натиснете бутона "Cancel".

5. Когато лената на зареждане приключи, ще се изведат цветовете, които 
най-често се срещат в посоченото изображение. На всеки цвят е изписано число, 
показващо колко често се среща този (или приблизителен на него) цвят. Също 
така е оказана и процентна стойност на честотата на цвета.

6. Може да смените изображението и/или да пуснете алгоритъма отначало 
(след като вече е приключил), без да презареждате страницата.

-------------------------------------------------------------------------------

ТЕХНИЧЕСКА ДОКУМЕНТАЦИЯ:

Файловете: index.html, main.js, style.css и ajax-loader.gif са за 
потребителския интерфейс.

Алгоритъма се съдържа във файла: thread_colors.js

Функцията onRequest получава съобщения от браузъра.
Функцията simpleClustering извършва клъстеризация и изпраща периодични 
съобщения, когато за прогреса и резултата, когато е готова.

Във функция simpleClustering:
Функцията distance намира евклидовето разстояние между два цвята.
Масива means съхранява всички налични means, на k-means алгоритъма.
Променливата pointMap е hash таблица на точките.

Всяка точка се състои от:
0 - червен цвят или първа координата
1 - зелен цвят или втора координата
2 - син цвят или трета координата
frequency - колко често се среща точно този цвят в изображението.
mean - най-близкия mean за тази точка открит досега.

Всеки mean се състои от:
0 - червен цвят или първа координата
1 - зелен цвят или втора координата
2 - син цвят или трета координата
count - брой на пикселите в изображението с подобен цвят.
tmpsum - сума на координатите на всички точки близки до този mean.
points - списък на точките "избрали" този mean.

Центроида на всеки mean се получава като се раздели tmpsum на count.

Функцията iterate извършва следните операции:
1. Намира най-близкия mean на всяка точка и генерира двустранна връзка помежду.
2. За всеки mean:
2.1. Намира новия центроид получен след стъпка (1).
2.2. Премества mean на мястото на центроида.
3. Намира всички means, които са по-близки от threshold и ги обединява в един.
4. Ако дистанцията на изместване на means от стъпка (2) е средно по-малка от 
sqrt(3), не се опитват повече итерации, иначе - връщане към стъпка (1).

